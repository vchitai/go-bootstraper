// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto_name_lower.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("proto_name_lower.proto", fileDescriptor_e475b7167490ad76) }

var fileDescriptor_e475b7167490ad76 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xe9, 0x1e, 0x3c, 0xec, 0x41, 0xa4, 0xc2, 0x22, 0x45, 0x22, 0x78, 0x36, 0x0d, 0x28,
	0xf8, 0x00, 0x9e, 0x3c, 0x89, 0x88, 0xf7, 0x32, 0xdd, 0x1d, 0xa7, 0xc1, 0x24, 0x13, 0x9b, 0x74,
	0x7b, 0xf7, 0xe4, 0xdd, 0x97, 0xf0, 0x51, 0x3c, 0x0a, 0xbe, 0x80, 0x14, 0x1f, 0x44, 0x9a, 0x2e,
	0x22, 0xcb, 0x7a, 0xca, 0x3f, 0xff, 0xf7, 0x05, 0x66, 0xe6, 0x0b, 0xdf, 0x72, 0xe4, 0xca, 0x81,
	0xc5, 0xca, 0x70, 0x8f, 0x6d, 0x99, 0x8a, 0x7c, 0xe6, 0xeb, 0xe2, 0x98, 0x98, 0xc9, 0xa0, 0x02,
	0xaf, 0x15, 0x38, 0xc7, 0x11, 0xa2, 0x66, 0x17, 0x26, 0xa3, 0x38, 0x4b, 0xcf, 0x52, 0x12, 0x3a,
	0x19, 0x7a, 0x20, 0xc2, 0x56, 0xb1, 0x4f, 0xc6, 0x0e, 0x5b, 0x92, 0x8e, 0x4d, 0x57, 0x97, 0x4b,
	0xb6, 0x8a, 0x98, 0x58, 0xa5, 0xba, 0xee, 0x1e, 0xd2, 0x94, 0x86, 0x94, 0x36, 0xfa, 0xe5, 0x1f,
	0xdd, 0xf6, 0x3a, 0x3e, 0x72, 0xaf, 0x88, 0x65, 0x82, 0x72, 0x0d, 0x46, 0xaf, 0x20, 0x72, 0x1b,
	0xd4, 0x6f, 0xdc, 0xfc, 0x13, 0xdb, 0xe7, 0x54, 0x16, 0x43, 0x00, 0xc2, 0x89, 0x9f, 0xbf, 0x64,
	0xf3, 0xfd, 0xdb, 0x31, 0xdd, 0x80, 0xc5, 0x7b, 0x1d, 0x0d, 0xe6, 0xeb, 0xf9, 0xe1, 0x35, 0x1a,
	0xc3, 0x5b, 0xb5, 0x28, 0x7d, 0x5d, 0xee, 0x00, 0x77, 0xf8, 0xd4, 0x61, 0x88, 0xc5, 0xc9, 0xbf,
	0x3c, 0x78, 0x76, 0x01, 0x4f, 0xc5, 0xf3, 0xe7, 0xf7, 0xeb, 0xec, 0x28, 0x5f, 0xa8, 0x66, 0xb4,
	0xa6, 0x83, 0xe5, 0xb8, 0x99, 0x5c, 0x41, 0x68, 0xae, 0x0e, 0xde, 0x06, 0x91, 0xbd, 0x0f, 0x22,
	0xfb, 0x18, 0x44, 0xf6, 0x35, 0x88, 0xac, 0xde, 0x4b, 0xca, 0xc5, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x5a, 0xa1, 0x55, 0x46, 0x94, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProtoNameTitleClient is the client API for ProtoNameTitle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProtoNameTitleClient interface {
	HelloProtoNameTitle(ctx context.Context, in *HelloProtoNameTitleRequest, opts ...grpc.CallOption) (*HelloProtoNameTitleResponse, error)
}

type protoNameTitleClient struct {
	cc *grpc.ClientConn
}

func NewProtoNameTitleClient(cc *grpc.ClientConn) ProtoNameTitleClient {
	return &protoNameTitleClient{cc}
}

func (c *protoNameTitleClient) HelloProtoNameTitle(ctx context.Context, in *HelloProtoNameTitleRequest, opts ...grpc.CallOption) (*HelloProtoNameTitleResponse, error) {
	out := new(HelloProtoNameTitleResponse)
	err := c.cc.Invoke(ctx, "/pb.ProtoNameTitle/HelloProtoNameTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProtoNameTitleServer is the server API for ProtoNameTitle service.
type ProtoNameTitleServer interface {
	HelloProtoNameTitle(context.Context, *HelloProtoNameTitleRequest) (*HelloProtoNameTitleResponse, error)
}

// UnimplementedProtoNameTitleServer can be embedded to have forward compatible implementations.
type UnimplementedProtoNameTitleServer struct {
}

func (*UnimplementedProtoNameTitleServer) HelloProtoNameTitle(ctx context.Context, req *HelloProtoNameTitleRequest) (*HelloProtoNameTitleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelloProtoNameTitle not implemented")
}

func RegisterProtoNameTitleServer(s *grpc.Server, srv ProtoNameTitleServer) {
	s.RegisterService(&_ProtoNameTitle_serviceDesc, srv)
}

func _ProtoNameTitle_HelloProtoNameTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloProtoNameTitleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoNameTitleServer).HelloProtoNameTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ProtoNameTitle/HelloProtoNameTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoNameTitleServer).HelloProtoNameTitle(ctx, req.(*HelloProtoNameTitleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProtoNameTitle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ProtoNameTitle",
	HandlerType: (*ProtoNameTitleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloProtoNameTitle",
			Handler:    _ProtoNameTitle_HelloProtoNameTitle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto_name_lower.proto",
}
